#!/bin/bash

# ThinkingNet-Go Cleanup Dry Run
# Shows what would be removed without actually removing anything

echo "🔍 ThinkingNet-Go Cleanup Dry Run - showing what would be removed..."
echo ""

# Function to show what would be removed
show_removal() {
    local file_path="$1"
    local reason="$2"
    if [ -e "$file_path" ]; then
        local size=$(du -sh "$file_path" 2>/dev/null | cut -f1)
        echo "  🗑️  Would remove: $file_path ($size) - $reason"
    else
        echo "  ❌ Not found: $file_path"
    fi
}

echo "📊 Large data files that would be removed:"
show_removal "mnist_data" "Large binary MNIST dataset files"
show_removal "data/checker_test.csv" "Test dataset file"
show_removal "data/checker_train.csv" "Training dataset file"
show_removal "data/moons_test.csv" "Test dataset file"
show_removal "data/moons_train.csv" "Training dataset file"
show_removal "data/swiss_hole_test.csv" "Test dataset file"
show_removal "data/swiss_hole_train.csv" "Training dataset file"
show_removal "data/intents_large.json" "Large intents dataset"

echo ""
echo "📜 Original/redundant code that would be removed:"
show_removal "OriginalCode" "Original code before refactoring"

echo ""
echo "🔧 IDE/tooling files that would be removed:"
show_removal ".vscode" "VS Code settings"
show_removal ".github" "GitHub workflows and settings"

echo ""
echo "🎯 Redundant examples that would be removed:"
show_removal "examples/activation_demo" "Redundant demo"
show_removal "examples/callbacks_demo" "Redundant demo"
show_removal "examples/classification_demo" "Redundant demo"
show_removal "examples/clustering_demo" "Redundant demo"
show_removal "examples/linear_regression_demo" "Redundant demo"
show_removal "examples/metrics_demo" "Redundant demo"
show_removal "examples/pca_demo" "Redundant demo"
show_removal "examples/preprocessing_demo" "Redundant demo"
show_removal "examples/tensor_demo" "Redundant demo"
show_removal "examples/optimization_demo.go" "Redundant demo file"

echo ""
echo "🧪 Redundant test files that would be removed:"
show_removal "pkg/core/comprehensive_test.go" "Redundant comprehensive test"
show_removal "pkg/core/tensor_extended_test.go" "Extended test covered elsewhere"
show_removal "pkg/layers/dense_edge_cases_test.go" "Edge case test"
show_removal "pkg/layers/dropout_edge_cases_test.go" "Edge case test"
show_removal "pkg/layers/integration_error_handling_test.go" "Integration test"
show_removal "pkg/layers/weight_initialization_test.go" "Weight init test"
show_removal "pkg/losses/simple_test.go" "Simple test covered elsewhere"
show_removal "pkg/models/example_test.go" "Example test"

echo ""
echo "🤖 Unused algorithm implementations that would be removed:"
show_removal "pkg/algorithms/dbscan.go" "DBSCAN algorithm (unused)"
show_removal "pkg/algorithms/random_forest.go" "Random Forest (unused)"
show_removal "pkg/algorithms/clustering_metrics.go" "Clustering metrics (unused)"

echo ""
echo "📊 Analysis files that would be removed:"
show_removal "OPTIMIZATION_IDEAS.md" "Optimization ideas document"
show_removal "OPTIMIZATION_SUMMARY.md" "Optimization summary"
show_removal "PERFORMANCE_ANALYSIS_RESULTS.md" "Performance analysis"
show_removal "ULTRA_FAST_OPTIMIZATIONS.md" "Ultra fast optimizations doc"
show_removal "integration_test.go" "Root integration test"

echo ""
echo "✅ Files that would be KEPT (essential):"
echo "  📚 Core library:"
echo "    - All .go files in pkg/ (core functionality)"
echo "    - Essential *_test.go files"
echo "    - go.mod, go.sum"
echo ""
echo "  📖 Documentation:"
echo "    - README.md"
echo "    - INTEGRATION_SUMMARY.md"
echo "    - docs/arabic-guide.md"
echo ""
echo "  🎯 Essential examples:"
echo "    - examples/simple_start.go"
echo "    - examples/easy_*.go"
echo "    - examples/easy_usage_demo/"
echo "    - examples/helper_functions_demo/"
echo "    - examples/preprocessing_helpers_demo/"
echo "    - examples/split_demo/"
echo "    - examples/bilingual_errors_demo/"
echo ""
echo "  🧪 Essential tests:"
echo "    - pkg/integration_test.go"
echo "    - Core functionality tests"
echo "    - Helper function tests"
echo "    - Bilingual error tests"
echo ""
echo "  📊 Performance:"
echo "    - benchmarks/ directory"
echo ""
echo "  📦 Essential data:"
echo "    - data/intents.json"
echo "    - data/test_real_world.json"
echo ""
echo "💡 To actually perform cleanup:"
echo "  - Conservative: ./cleanup_conservative.sh"
echo "  - Aggressive: ./cleanup.sh"
echo ""
echo "🎯 Current project size:"
du -sh . 2>/dev/null | cut -f1 | xargs echo "Total size:"